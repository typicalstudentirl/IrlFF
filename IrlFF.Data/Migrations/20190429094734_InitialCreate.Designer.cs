// <auto-generated />
using System;
using IrlFF.Data.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IrlFF.Data.Migrations
{
    [DbContext(typeof(FFDbContext))]
    [Migration("20190429094734_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IrlFF.Data.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClubName");

                    b.HasKey("Id");

                    b.ToTable("Club");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClubName = "Bohemians FC"
                        },
                        new
                        {
                            Id = 2,
                            ClubName = "Cork City"
                        },
                        new
                        {
                            Id = 3,
                            ClubName = "Derry City"
                        },
                        new
                        {
                            Id = 4,
                            ClubName = "Dundalk FC"
                        },
                        new
                        {
                            Id = 5,
                            ClubName = "Finn Harps"
                        },
                        new
                        {
                            Id = 6,
                            ClubName = "Shamrock Rovers"
                        },
                        new
                        {
                            Id = 7,
                            ClubName = "Sligo Rovers"
                        },
                        new
                        {
                            Id = 8,
                            ClubName = "St. Pats"
                        },
                        new
                        {
                            Id = 9,
                            ClubName = "U.C.D"
                        },
                        new
                        {
                            Id = 10,
                            ClubName = "Waterford"
                        });
                });

            modelBuilder.Entity("IrlFF.Data.Models.Fixture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Fixture");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("IrlFF.Data.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwayClub");

                    b.Property<DateTime>("Date");

                    b.Property<int>("FixtureId");

                    b.Property<string>("HomeClub");

                    b.Property<string>("Location");

                    b.HasKey("Id");

                    b.HasIndex("FixtureId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayClub = "Shamrock Rovers",
                            Date = new DateTime(2019, 2, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 1,
                            HomeClub = "Waterford",
                            Location = "Waterford RSC"
                        },
                        new
                        {
                            Id = 2,
                            AwayClub = "Cork City",
                            Date = new DateTime(2019, 2, 12, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 1,
                            HomeClub = "St. Pats",
                            Location = "Richmond Park"
                        },
                        new
                        {
                            Id = 3,
                            AwayClub = "Sligo Rovers",
                            Date = new DateTime(2019, 2, 15, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 1,
                            HomeClub = "Dundalk",
                            Location = "Oriel Park"
                        },
                        new
                        {
                            Id = 4,
                            AwayClub = "U.C.D",
                            Date = new DateTime(2019, 2, 15, 20, 19, 45, 0, DateTimeKind.Unspecified),
                            FixtureId = 1,
                            HomeClub = "Derry City",
                            Location = "The Brandywell Stadium"
                        },
                        new
                        {
                            Id = 5,
                            AwayClub = "Finn Harps",
                            Date = new DateTime(2019, 2, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 1,
                            HomeClub = "Bohemians",
                            Location = "Dalymount Park"
                        },
                        new
                        {
                            Id = 6,
                            AwayClub = "Waterford",
                            Date = new DateTime(2019, 2, 22, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 2,
                            HomeClub = "Cork City",
                            Location = "Turner's Cross"
                        },
                        new
                        {
                            Id = 7,
                            AwayClub = "Derry City",
                            Date = new DateTime(2019, 2, 22, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 2,
                            HomeClub = "Shamrock Rovers",
                            Location = "Tallaght Stadium"
                        },
                        new
                        {
                            Id = 8,
                            AwayClub = "Dundalk",
                            Date = new DateTime(2019, 2, 22, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 2,
                            HomeClub = "Finn Harps",
                            Location = "Finn Park"
                        },
                        new
                        {
                            Id = 9,
                            AwayClub = "Bohemians",
                            Date = new DateTime(2019, 2, 22, 20, 19, 45, 0, DateTimeKind.Unspecified),
                            FixtureId = 2,
                            HomeClub = "U.C.D",
                            Location = "U.C.D Bowl"
                        },
                        new
                        {
                            Id = 10,
                            AwayClub = "St. Pats",
                            Date = new DateTime(2019, 2, 22, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            FixtureId = 2,
                            HomeClub = "Sligo Rovers",
                            Location = "The Showgrounds"
                        });
                });

            modelBuilder.Entity("IrlFF.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubId");

                    b.Property<string>("Forename");

                    b.Property<int>("Position");

                    b.Property<string>("Surname");

                    b.Property<int>("TotalPoints");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClubId = 3,
                            Forename = "Peter",
                            Position = 1,
                            Surname = "Cherrie",
                            TotalPoints = 4
                        },
                        new
                        {
                            Id = 2,
                            ClubId = 3,
                            Forename = "Nathan",
                            Position = 1,
                            Surname = "Gartside",
                            TotalPoints = 2
                        },
                        new
                        {
                            Id = 3,
                            ClubId = 3,
                            Forename = "Rhys",
                            Position = 2,
                            Surname = "McDermott",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 4,
                            ClubId = 3,
                            Forename = "Connor",
                            Position = 2,
                            Surname = "McDermott",
                            TotalPoints = 4
                        },
                        new
                        {
                            Id = 5,
                            ClubId = 3,
                            Forename = "Ciaran",
                            Position = 2,
                            Surname = "Coll",
                            TotalPoints = 1
                        },
                        new
                        {
                            Id = 6,
                            ClubId = 3,
                            Forename = "Eoin",
                            Position = 2,
                            Surname = "Toal",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 7,
                            ClubId = 3,
                            Forename = "Patrick",
                            Position = 2,
                            Surname = "McClean",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 8,
                            ClubId = 3,
                            Forename = "Darren",
                            Position = 2,
                            Surname = "Cole",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 9,
                            ClubId = 3,
                            Forename = "Josh",
                            Position = 2,
                            Surname = "Kerr",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 10,
                            ClubId = 3,
                            Forename = "Ally",
                            Position = 2,
                            Surname = "Gilchrist",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 11,
                            ClubId = 3,
                            Forename = "Brendan",
                            Position = 3,
                            Surname = "Barr",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 12,
                            ClubId = 3,
                            Forename = "Conor",
                            Position = 3,
                            Surname = "Gormley",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 13,
                            ClubId = 3,
                            Forename = "Ciaron",
                            Position = 3,
                            Surname = "Harkin",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 14,
                            ClubId = 3,
                            Forename = "Greg",
                            Position = 3,
                            Surname = "Sloggett",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 15,
                            ClubId = 3,
                            Forename = "Jamie",
                            Position = 3,
                            Surname = "McDonagh",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 16,
                            ClubId = 3,
                            Forename = "Gerardo",
                            Position = 3,
                            Surname = "Bruna",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 17,
                            ClubId = 3,
                            Forename = "Adrian",
                            Position = 3,
                            Surname = "Delap",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 18,
                            ClubId = 3,
                            Forename = "Evan",
                            Position = 3,
                            Surname = "Tweed",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 19,
                            ClubId = 3,
                            Forename = "Shane",
                            Position = 3,
                            Surname = "McNamee",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 20,
                            ClubId = 3,
                            Forename = "Gianni",
                            Position = 3,
                            Surname = "Seraf",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 21,
                            ClubId = 3,
                            Forename = "Barry",
                            Position = 3,
                            Surname = "McNamee",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 22,
                            ClubId = 3,
                            Forename = "Ronan",
                            Position = 3,
                            Surname = "McKinley",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 23,
                            ClubId = 3,
                            Forename = "David",
                            Position = 4,
                            Surname = "Parkhouse",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 24,
                            ClubId = 3,
                            Forename = "Michael",
                            Position = 4,
                            Surname = "McCrudden",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 25,
                            ClubId = 3,
                            Forename = "Junior",
                            Position = 4,
                            Surname = "Ogedi-Uzokwe",
                            TotalPoints = 0
                        },
                        new
                        {
                            Id = 26,
                            ClubId = 3,
                            Forename = "Eoghan",
                            Position = 4,
                            Surname = "Stokes",
                            TotalPoints = 0
                        });
                });

            modelBuilder.Entity("IrlFF.Data.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Forename");

                    b.Property<string>("Surname");

                    b.Property<string>("TeamName");

                    b.Property<int>("TotalPoints");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Team");
                });

            modelBuilder.Entity("IrlFF.Data.Models.TeamPlayer", b =>
                {
                    b.Property<int>("TeamId");

                    b.Property<int>("PlayerId");

                    b.HasKey("TeamId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("TeamPlayer");
                });

            modelBuilder.Entity("IrlFF.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForeName");

                    b.Property<string>("Password");

                    b.Property<int>("Role");

                    b.Property<string>("SurName");

                    b.Property<string>("TeamId");

                    b.Property<string>("Token");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("IrlFF.Data.Models.Match", b =>
                {
                    b.HasOne("IrlFF.Data.Models.Fixture", "Fixture")
                        .WithMany("Matches")
                        .HasForeignKey("FixtureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IrlFF.Data.Models.Player", b =>
                {
                    b.HasOne("IrlFF.Data.Models.Club", "Club")
                        .WithMany("Players")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IrlFF.Data.Models.Team", b =>
                {
                    b.HasOne("IrlFF.Data.Models.User", "User")
                        .WithOne("Team")
                        .HasForeignKey("IrlFF.Data.Models.Team", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IrlFF.Data.Models.TeamPlayer", b =>
                {
                    b.HasOne("IrlFF.Data.Models.Player", "Player")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IrlFF.Data.Models.Team", "Team")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
